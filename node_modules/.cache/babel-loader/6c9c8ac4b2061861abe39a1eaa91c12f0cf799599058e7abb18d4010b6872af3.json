{"ast":null,"code":"var _jsxFileName = \"C:\\\\flowchart\\\\src\\\\components\\\\Flowchart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { getPrerequisites, getCorequisites } from '../data/courses';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flowchart = ({\n  selectedCourse,\n  onCourseClick\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [connections, setConnections] = useState([]);\n  const [coursePositions, setCoursePositions] = useState({});\n\n  // Generate connections for the selected course\n  useEffect(() => {\n    if (!selectedCourse) {\n      setConnections([]);\n      return;\n    }\n    const newConnections = [];\n\n    // Add prerequisite connections\n    const prerequisites = getPrerequisites(selectedCourse.id);\n    prerequisites.forEach(prereq => {\n      newConnections.push({\n        from: prereq.id,\n        to: selectedCourse.id,\n        type: 'prerequisite'\n      });\n    });\n\n    // Add corequisite connections\n    const corequisites = getCorequisites(selectedCourse.id);\n    corequisites.forEach(coreq => {\n      newConnections.push({\n        from: coreq.id,\n        to: selectedCourse.id,\n        type: 'corequisite'\n      });\n    });\n    setConnections(newConnections);\n  }, [selectedCourse]);\n\n  // Calculate positions for courses\n  useEffect(() => {\n    if (!selectedCourse) return;\n    const positions = {};\n    const centerX = 400;\n    const centerY = 300;\n\n    // Position selected course in center\n    positions[selectedCourse.id] = {\n      x: centerX,\n      y: centerY\n    };\n\n    // Position prerequisites above\n    const prerequisites = getPrerequisites(selectedCourse.id);\n    const corequisites = getCorequisites(selectedCourse.id);\n    const totalRelated = prerequisites.length + corequisites.length;\n    const angleStep = totalRelated > 1 ? Math.PI * 2 / totalRelated : 0;\n    const radius = 150;\n    let index = 0;\n\n    // Position prerequisites\n    prerequisites.forEach(prereq => {\n      const angle = index * angleStep;\n      positions[prereq.id] = {\n        x: centerX + Math.cos(angle) * radius,\n        y: centerY + Math.sin(angle) * radius - 50\n      };\n      index++;\n    });\n\n    // Position corequisites\n    corequisites.forEach(coreq => {\n      const angle = index * angleStep;\n      positions[coreq.id] = {\n        x: centerX + Math.cos(angle) * radius,\n        y: centerY + Math.sin(angle) * radius - 50\n      };\n      index++;\n    });\n    setCoursePositions(positions);\n  }, [selectedCourse]);\n  const renderArrow = (from, to, type) => {\n    const fromPos = coursePositions[from];\n    const toPos = coursePositions[to];\n    if (!fromPos || !toPos) return null;\n    const dx = toPos.x - fromPos.x;\n    const dy = toPos.y - fromPos.y;\n    const angle = Math.atan2(dy, dx);\n\n    // Adjust arrow start and end to avoid overlapping with course cards\n    const offset = 60;\n    const startX = fromPos.x + Math.cos(angle) * offset;\n    const startY = fromPos.y + Math.sin(angle) * offset;\n    const endX = toPos.x - Math.cos(angle) * offset;\n    const endY = toPos.y - Math.sin(angle) * offset;\n    const strokeColor = type === 'prerequisite' ? '#dc2626' : '#2563eb';\n    const strokeWidth = type === 'prerequisite' ? 3 : 2;\n    const dashArray = type === 'corequisite' ? '5,5' : 'none';\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: startX,\n        y1: startY,\n        x2: endX,\n        y2: endY,\n        stroke: strokeColor,\n        strokeWidth: strokeWidth,\n        strokeDasharray: dashArray,\n        markerEnd: `url(#arrowhead-${type})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: (startX + endX) / 2,\n        y: (startY + endY) / 2 - 10,\n        textAnchor: \"middle\",\n        className: \"text-xs font-bold\",\n        fill: strokeColor,\n        children: type === 'prerequisite' ? 'PREREQ' : 'COREQ'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, `${from}-${to}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCourseNode = course => {\n    const position = coursePositions[course.id];\n    if (!position) return null;\n    const isSelected = (selectedCourse === null || selectedCourse === void 0 ? void 0 : selectedCourse.id) === course.id;\n    return /*#__PURE__*/_jsxDEV(motion.g, {\n      initial: {\n        opacity: 0,\n        scale: 0\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        duration: 0.5,\n        delay: 0.1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: position.x - 80,\n        y: position.y - 40,\n        width: 160,\n        height: 80,\n        rx: 8,\n        fill: isSelected ? '#fef3c7' : '#ffffff',\n        stroke: isSelected ? '#f59e0b' : '#000000',\n        strokeWidth: isSelected ? 3 : 2,\n        className: \"cursor-pointer hover:stroke-primary-500 transition-colors\",\n        onClick: () => onCourseClick(course)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: position.x,\n        y: position.y - 15,\n        textAnchor: \"middle\",\n        className: \"text-sm font-bold\",\n        fill: \"#1f2937\",\n        children: course.code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: position.x,\n        y: position.y + 5,\n        textAnchor: \"middle\",\n        className: \"text-xs\",\n        fill: \"#6b7280\",\n        children: course.name.split(' ').slice(0, 2).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: position.x,\n        y: position.y + 20,\n        textAnchor: \"middle\",\n        className: \"text-xs font-semibold\",\n        fill: \"#059669\",\n        children: [course.units, \" units\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, course.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  };\n  if (!selectedCourse) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-96 bg-white border-2 border-black shadow-brutal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-6xl mb-4\",\n          children: \"\\uD83C\\uDF93\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-gray-800 mb-2\",\n          children: \"Course Flowchart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Click on any course to see its relationships\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  const allCourses = [selectedCourse, ...getPrerequisites(selectedCourse.id), ...getCorequisites(selectedCourse.id)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white border-2 border-black shadow-brutal p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-bold text-gray-800 mb-4 text-center\",\n      children: [\"Course Relationships for \", selectedCourse.code]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-96 overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: \"100%\",\n        height: \"100%\",\n        viewBox: \"0 0 800 600\",\n        className: \"absolute inset-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: [/*#__PURE__*/_jsxDEV(\"marker\", {\n            id: \"arrowhead-prerequisite\",\n            markerWidth: \"10\",\n            markerHeight: \"7\",\n            refX: \"9\",\n            refY: \"3.5\",\n            orient: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"0 0, 10 3.5, 0 7\",\n              fill: \"#dc2626\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n            id: \"arrowhead-corequisite\",\n            markerWidth: \"10\",\n            markerHeight: \"7\",\n            refX: \"9\",\n            refY: \"3.5\",\n            orient: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"0 0, 10 3.5, 0 7\",\n              fill: \"#2563eb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), connections.map(connection => renderArrow(connection.from, connection.to, connection.type)), allCourses.map(course => renderCourseNode(course))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex justify-center gap-6 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-0.5 bg-red-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold text-red-600\",\n          children: \"Prerequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-0.5 bg-blue-600 border-dashed border-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold text-blue-600\",\n          children: \"Corequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(Flowchart, \"tss8HLLSESjnd1NChUpNGfR3r+M=\");\n_c = Flowchart;\nexport default Flowchart;\nvar _c;\n$RefreshReg$(_c, \"Flowchart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","motion","getPrerequisites","getCorequisites","jsxDEV","_jsxDEV","Flowchart","selectedCourse","onCourseClick","_s","svgRef","connections","setConnections","coursePositions","setCoursePositions","newConnections","prerequisites","id","forEach","prereq","push","from","to","type","corequisites","coreq","positions","centerX","centerY","x","y","totalRelated","length","angleStep","Math","PI","radius","index","angle","cos","sin","renderArrow","fromPos","toPos","dx","dy","atan2","offset","startX","startY","endX","endY","strokeColor","strokeWidth","dashArray","children","x1","y1","x2","y2","stroke","strokeDasharray","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","className","fill","renderCourseNode","course","position","isSelected","g","initial","opacity","scale","animate","transition","duration","delay","width","height","rx","onClick","code","name","split","slice","join","units","allCourses","ref","viewBox","markerWidth","markerHeight","refX","refY","orient","points","map","connection","_c","$RefreshReg$"],"sources":["C:/flowchart/src/components/Flowchart.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Course, getPrerequisites, getCorequisites } from '../data/courses';\r\n\r\ninterface FlowchartProps {\r\n  selectedCourse: Course | null;\r\n  onCourseClick: (course: Course) => void;\r\n}\r\n\r\ninterface Connection {\r\n  from: string;\r\n  to: string;\r\n  type: 'prerequisite' | 'corequisite';\r\n}\r\n\r\nconst Flowchart: React.FC<FlowchartProps> = ({ selectedCourse, onCourseClick }) => {\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n  const [connections, setConnections] = useState<Connection[]>([]);\r\n  const [coursePositions, setCoursePositions] = useState<{ [key: string]: { x: number; y: number } }>({});\r\n\r\n  // Generate connections for the selected course\r\n  useEffect(() => {\r\n    if (!selectedCourse) {\r\n      setConnections([]);\r\n      return;\r\n    }\r\n\r\n    const newConnections: Connection[] = [];\r\n    \r\n    // Add prerequisite connections\r\n    const prerequisites = getPrerequisites(selectedCourse.id);\r\n    prerequisites.forEach(prereq => {\r\n      newConnections.push({\r\n        from: prereq.id,\r\n        to: selectedCourse.id,\r\n        type: 'prerequisite'\r\n      });\r\n    });\r\n\r\n    // Add corequisite connections\r\n    const corequisites = getCorequisites(selectedCourse.id);\r\n    corequisites.forEach(coreq => {\r\n      newConnections.push({\r\n        from: coreq.id,\r\n        to: selectedCourse.id,\r\n        type: 'corequisite'\r\n      });\r\n    });\r\n\r\n    setConnections(newConnections);\r\n  }, [selectedCourse]);\r\n\r\n  // Calculate positions for courses\r\n  useEffect(() => {\r\n    if (!selectedCourse) return;\r\n\r\n    const positions: { [key: string]: { x: number; y: number } } = {};\r\n    const centerX = 400;\r\n    const centerY = 300;\r\n    \r\n    // Position selected course in center\r\n    positions[selectedCourse.id] = { x: centerX, y: centerY };\r\n\r\n    // Position prerequisites above\r\n    const prerequisites = getPrerequisites(selectedCourse.id);\r\n    const corequisites = getCorequisites(selectedCourse.id);\r\n    \r\n    const totalRelated = prerequisites.length + corequisites.length;\r\n    const angleStep = totalRelated > 1 ? (Math.PI * 2) / totalRelated : 0;\r\n    const radius = 150;\r\n\r\n    let index = 0;\r\n    \r\n    // Position prerequisites\r\n    prerequisites.forEach(prereq => {\r\n      const angle = index * angleStep;\r\n      positions[prereq.id] = {\r\n        x: centerX + Math.cos(angle) * radius,\r\n        y: centerY + Math.sin(angle) * radius - 50\r\n      };\r\n      index++;\r\n    });\r\n\r\n    // Position corequisites\r\n    corequisites.forEach(coreq => {\r\n      const angle = index * angleStep;\r\n      positions[coreq.id] = {\r\n        x: centerX + Math.cos(angle) * radius,\r\n        y: centerY + Math.sin(angle) * radius - 50\r\n      };\r\n      index++;\r\n    });\r\n\r\n    setCoursePositions(positions);\r\n  }, [selectedCourse]);\r\n\r\n  const renderArrow = (from: string, to: string, type: 'prerequisite' | 'corequisite') => {\r\n    const fromPos = coursePositions[from];\r\n    const toPos = coursePositions[to];\r\n    \r\n    if (!fromPos || !toPos) return null;\r\n\r\n    const dx = toPos.x - fromPos.x;\r\n    const dy = toPos.y - fromPos.y;\r\n    const angle = Math.atan2(dy, dx);\r\n    \r\n    // Adjust arrow start and end to avoid overlapping with course cards\r\n    const offset = 60;\r\n    const startX = fromPos.x + Math.cos(angle) * offset;\r\n    const startY = fromPos.y + Math.sin(angle) * offset;\r\n    const endX = toPos.x - Math.cos(angle) * offset;\r\n    const endY = toPos.y - Math.sin(angle) * offset;\r\n\r\n    const strokeColor = type === 'prerequisite' ? '#dc2626' : '#2563eb';\r\n    const strokeWidth = type === 'prerequisite' ? 3 : 2;\r\n    const dashArray = type === 'corequisite' ? '5,5' : 'none';\r\n\r\n    return (\r\n      <g key={`${from}-${to}`}>\r\n        <line\r\n          x1={startX}\r\n          y1={startY}\r\n          x2={endX}\r\n          y2={endY}\r\n          stroke={strokeColor}\r\n          strokeWidth={strokeWidth}\r\n          strokeDasharray={dashArray}\r\n          markerEnd={`url(#arrowhead-${type})`}\r\n        />\r\n        <text\r\n          x={(startX + endX) / 2}\r\n          y={(startY + endY) / 2 - 10}\r\n          textAnchor=\"middle\"\r\n          className=\"text-xs font-bold\"\r\n          fill={strokeColor}\r\n        >\r\n          {type === 'prerequisite' ? 'PREREQ' : 'COREQ'}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const renderCourseNode = (course: Course) => {\r\n    const position = coursePositions[course.id];\r\n    if (!position) return null;\r\n\r\n    const isSelected = selectedCourse?.id === course.id;\r\n\r\n    return (\r\n      <motion.g\r\n        key={course.id}\r\n        initial={{ opacity: 0, scale: 0 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        transition={{ duration: 0.5, delay: 0.1 }}\r\n      >\r\n        <rect\r\n          x={position.x - 80}\r\n          y={position.y - 40}\r\n          width={160}\r\n          height={80}\r\n          rx={8}\r\n          fill={isSelected ? '#fef3c7' : '#ffffff'}\r\n          stroke={isSelected ? '#f59e0b' : '#000000'}\r\n          strokeWidth={isSelected ? 3 : 2}\r\n          className=\"cursor-pointer hover:stroke-primary-500 transition-colors\"\r\n          onClick={() => onCourseClick(course)}\r\n        />\r\n        <text\r\n          x={position.x}\r\n          y={position.y - 15}\r\n          textAnchor=\"middle\"\r\n          className=\"text-sm font-bold\"\r\n          fill=\"#1f2937\"\r\n        >\r\n          {course.code}\r\n        </text>\r\n        <text\r\n          x={position.x}\r\n          y={position.y + 5}\r\n          textAnchor=\"middle\"\r\n          className=\"text-xs\"\r\n          fill=\"#6b7280\"\r\n        >\r\n          {course.name.split(' ').slice(0, 2).join(' ')}\r\n        </text>\r\n        <text\r\n          x={position.x}\r\n          y={position.y + 20}\r\n          textAnchor=\"middle\"\r\n          className=\"text-xs font-semibold\"\r\n          fill=\"#059669\"\r\n        >\r\n          {course.units} units\r\n        </text>\r\n      </motion.g>\r\n    );\r\n  };\r\n\r\n  if (!selectedCourse) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-96 bg-white border-2 border-black shadow-brutal\">\r\n        <div className=\"text-center\">\r\n          <div className=\"text-6xl mb-4\">🎓</div>\r\n          <h3 className=\"text-xl font-bold text-gray-800 mb-2\">Course Flowchart</h3>\r\n          <p className=\"text-gray-600\">Click on any course to see its relationships</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const allCourses = [\r\n    selectedCourse,\r\n    ...getPrerequisites(selectedCourse.id),\r\n    ...getCorequisites(selectedCourse.id)\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-white border-2 border-black shadow-brutal p-6\">\r\n      <h3 className=\"text-xl font-bold text-gray-800 mb-4 text-center\">\r\n        Course Relationships for {selectedCourse.code}\r\n      </h3>\r\n      \r\n      <div className=\"relative w-full h-96 overflow-hidden\">\r\n        <svg\r\n          ref={svgRef}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          viewBox=\"0 0 800 600\"\r\n          className=\"absolute inset-0\"\r\n        >\r\n          {/* Arrow markers */}\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead-prerequisite\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"9\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n            >\r\n              <polygon\r\n                points=\"0 0, 10 3.5, 0 7\"\r\n                fill=\"#dc2626\"\r\n              />\r\n            </marker>\r\n            <marker\r\n              id=\"arrowhead-corequisite\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"9\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n            >\r\n              <polygon\r\n                points=\"0 0, 10 3.5, 0 7\"\r\n                fill=\"#2563eb\"\r\n              />\r\n            </marker>\r\n          </defs>\r\n\r\n          {/* Render connections */}\r\n          {connections.map(connection => \r\n            renderArrow(connection.from, connection.to, connection.type)\r\n          )}\r\n\r\n          {/* Render course nodes */}\r\n          {allCourses.map(course => renderCourseNode(course))}\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"mt-4 flex justify-center gap-6 text-sm\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"w-4 h-0.5 bg-red-600\"></div>\r\n          <span className=\"font-semibold text-red-600\">Prerequisites</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"w-4 h-0.5 bg-blue-600 border-dashed border-blue-600\"></div>\r\n          <span className=\"font-semibold text-blue-600\">Corequisites</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flowchart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}