{"ast":null,"code":"var _jsxFileName = \"C:\\\\flowchart\\\\src\\\\components\\\\Flowchart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { getPrerequisites, getCorequisites, courses } from '../data/courses.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flowchart = ({\n  selectedCourse,\n  onCourseClick\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [hoveredCourse, setHoveredCourse] = useState(null);\n  const [connections, setConnections] = useState([]);\n  const [svgDimensions, setSvgDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n\n  // Update SVG dimensions on mount and resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (svgRef.current) {\n        const container = svgRef.current.parentElement;\n        if (container) {\n          setSvgDimensions({\n            width: container.clientWidth,\n            height: container.clientHeight\n          });\n        }\n      }\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Generate connections for the hovered course\n  useEffect(() => {\n    if (!hoveredCourse) {\n      setConnections([]);\n      return;\n    }\n    const newConnections = [];\n\n    // Get prerequisites\n    const prerequisites = getPrerequisites(hoveredCourse.id);\n    prerequisites.forEach(prereq => {\n      newConnections.push({\n        from: prereq.id,\n        to: hoveredCourse.id,\n        type: 'prerequisite'\n      });\n    });\n\n    // Get corequisites\n    const corequisites = getCorequisites(hoveredCourse.id);\n    corequisites.forEach(coreq => {\n      newConnections.push({\n        from: coreq.id,\n        to: hoveredCourse.id,\n        type: 'corequisite'\n      });\n    });\n    setConnections(newConnections);\n  }, [hoveredCourse]);\n\n  // Get courses organized by year and semester\n  const getCoursesByYearAndSemester = () => {\n    const organized = {};\n    courses.forEach(course => {\n      const semesterKey = `Year ${course.year} ${course.semester}`;\n      if (!organized[semesterKey]) {\n        organized[semesterKey] = [];\n      }\n      organized[semesterKey].push(course);\n    });\n\n    // Sort semesters in chronological order\n    const sortedKeys = Object.keys(organized).sort((a, b) => {\n      const yearA = parseInt(a.split(' ')[1]);\n      const yearB = parseInt(b.split(' ')[1]);\n      if (yearA !== yearB) return yearA - yearB;\n      return a.includes('Fall') ? -1 : 1;\n    });\n    return sortedKeys.map(key => ({\n      semester: key,\n      courses: organized[key]\n    }));\n  };\n  const semesterData = getCoursesByYearAndSemester();\n  const totalSemesters = semesterData.length;\n\n  // Dynamic sizing based on viewport\n  const semesterWidth = Math.max(300, svgDimensions.width / totalSemesters - 40);\n  const courseHeight = 140;\n  const courseSpacing = 24;\n  const semesterSpacing = 60;\n  const topMargin = 80;\n  const leftMargin = 40;\n  const svgWidth = Math.max(svgDimensions.width, totalSemesters * (semesterWidth + semesterSpacing) + leftMargin * 2);\n  const svgHeight = Math.max(svgDimensions.height, 800);\n  const getCoursePosition = (semesterIndex, courseIndex, totalCourses) => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + leftMargin;\n    const totalHeight = totalCourses * (courseHeight + courseSpacing) - courseSpacing;\n    const startY = topMargin + 60; // Extra space for semester title\n    const y = startY + courseIndex * (courseHeight + courseSpacing);\n    return {\n      x,\n      y\n    };\n  };\n  const getSemesterTitlePosition = semesterIndex => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + leftMargin + semesterWidth / 2;\n    return {\n      x,\n      y: topMargin\n    };\n  };\n  const isCourseHighlighted = course => {\n    if (!hoveredCourse) return false;\n    return connections.some(conn => conn.from === course.id && conn.to === hoveredCourse.id || conn.to === course.id && conn.from === hoveredCourse.id);\n  };\n  const getConnectionPath = (fromCourse, toCourse, fromIndex, toIndex) => {\n    const fromPos = getCoursePosition(fromIndex, fromCourse.year - 1, 1);\n    const toPos = getCoursePosition(toIndex, toCourse.year - 1, 1);\n\n    // Adjust arrow start and end to avoid overlapping with course cards\n    const fromX = fromPos.x + semesterWidth - 20;\n    const fromY = fromPos.y + courseHeight / 2;\n    const toX = toPos.x + 20;\n    const toY = toPos.y + courseHeight / 2;\n\n    // Create a curved path\n    const controlPoint1X = fromX + (toX - fromX) * 0.3;\n    const controlPoint1Y = fromY;\n    const controlPoint2X = fromX + (toX - fromX) * 0.7;\n    const controlPoint2Y = toY;\n    return `M ${fromX} ${fromY} C ${controlPoint1X} ${controlPoint1Y}, ${controlPoint2X} ${controlPoint2Y}, ${toX} ${toY}`;\n  };\n  const getCourseHighlightColor = course => {\n    if (!hoveredCourse) return null;\n\n    // Check if this course is a prerequisite of the hovered course\n    const isPrerequisite = connections.some(conn => conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'prerequisite');\n\n    // Check if this course is a corequisite of the hovered course\n    const isCorequisite = connections.some(conn => conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'corequisite');\n\n    // Check if this course has the hovered course as a prerequisite\n    const hasHoveredAsPrerequisite = getPrerequisites(course.id).some(prereq => prereq.id === hoveredCourse.id);\n    if (isPrerequisite) return '#fef3c7'; // Yellow for prerequisites\n    if (isCorequisite) return '#dbeafe'; // Blue for corequisites\n    if (hasHoveredAsPrerequisite) return '#fce7f3'; // Pink for following courses\n    if (course.id === hoveredCourse.id) return '#fef3c7'; // Yellow for hovered course\n\n    return null;\n  };\n  const getCourseBorderColor = course => {\n    if (!hoveredCourse) return '#000000';\n    const isPrerequisite = connections.some(conn => conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'prerequisite');\n    const isCorequisite = connections.some(conn => conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'corequisite');\n    const hasHoveredAsPrerequisite = getPrerequisites(course.id).some(prereq => prereq.id === hoveredCourse.id);\n    if (isPrerequisite) return '#d97706'; // Orange border for prerequisites\n    if (isCorequisite) return '#2563eb'; // Blue border for corequisites\n    if (hasHoveredAsPrerequisite) return '#be185d'; // Pink border for following courses\n    if (course.id === hoveredCourse.id) return '#d97706'; // Orange border for hovered course\n\n    return '#000000';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full overflow-auto bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: svgWidth,\n      height: svgHeight,\n      className: \"w-full h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: [/*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead-prerequisite\",\n          markerWidth: \"12\",\n          markerHeight: \"8\",\n          refX: \"10\",\n          refY: \"4\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 12 4, 0 8\",\n            fill: \"#d97706\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead-corequisite\",\n          markerWidth: \"12\",\n          markerHeight: \"8\",\n          refX: \"10\",\n          refY: \"4\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 12 4, 0 8\",\n            fill: \"#2563eb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead-following\",\n          markerWidth: \"12\",\n          markerHeight: \"8\",\n          refX: \"10\",\n          refY: \"4\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 12 4, 0 8\",\n            fill: \"#be185d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n          id: \"grid\",\n          width: \"40\",\n          height: \"40\",\n          patternUnits: \"userSpaceOnUse\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M 40 0 L 0 0 0 40\",\n            fill: \"none\",\n            stroke: \"#e2e8f0\",\n            strokeWidth: \"1\",\n            opacity: \"0.3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        width: \"100%\",\n        height: \"100%\",\n        fill: \"url(#grid)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), semesterData.map((semester, semesterIndex) => {\n        const titlePos = getSemesterTitlePosition(semesterIndex);\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: titlePos.x - 100,\n            y: titlePos.y - 30,\n            width: \"200\",\n            height: \"40\",\n            rx: \"20\",\n            fill: \"rgba(255, 255, 255, 0.9)\",\n            stroke: \"#000000\",\n            strokeWidth: \"2\",\n            className: \"shadow-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: titlePos.x,\n            y: titlePos.y - 5,\n            textAnchor: \"middle\",\n            className: \"text-lg font-bold fill-gray-900\",\n            children: semester.semester\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, semester.semester, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this);\n      }), connections.map((connection, index) => {\n        const fromCourse = courses.find(c => c.id === connection.from);\n        const toCourse = courses.find(c => c.id === connection.to);\n        if (!fromCourse || !toCourse) return null;\n        const fromSemesterIndex = semesterData.findIndex(s => s.courses.some(c => c.id === fromCourse.id));\n        const toSemesterIndex = semesterData.findIndex(s => s.courses.some(c => c.id === toCourse.id));\n        if (fromSemesterIndex === -1 || toSemesterIndex === -1) return null;\n        const path = getConnectionPath(fromCourse, toCourse, fromSemesterIndex, toSemesterIndex);\n        const isPrerequisite = connection.type === 'prerequisite';\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: path,\n            stroke: isPrerequisite ? \"#d97706\" : \"#2563eb\",\n            strokeWidth: \"4\",\n            strokeDasharray: isPrerequisite ? \"none\" : \"12,6\",\n            fill: \"none\",\n            markerEnd: `url(#arrowhead-${connection.type})`,\n            opacity: \"0.8\",\n            className: \"transition-all duration-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)\n        }, `connection-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this);\n      }), semesterData.map((semester, semesterIndex) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: semester.courses.map((course, courseIndex) => {\n          const position = getCoursePosition(semesterIndex, courseIndex, semester.courses.length);\n          const isHighlighted = isCourseHighlighted(course);\n          const isHovered = (hoveredCourse === null || hoveredCourse === void 0 ? void 0 : hoveredCourse.id) === course.id;\n          const highlightColor = getCourseHighlightColor(course);\n          const borderColor = getCourseBorderColor(course);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: position.x,\n              y: position.y,\n              width: semesterWidth - 40,\n              height: courseHeight,\n              rx: \"16\",\n              fill: highlightColor || \"#ffffff\",\n              stroke: borderColor,\n              strokeWidth: \"3\",\n              className: \"cursor-pointer transition-all duration-300 shadow-lg hover:shadow-xl\",\n              onMouseEnter: () => setHoveredCourse(course),\n              onMouseLeave: () => setHoveredCourse(null),\n              onClick: () => onCourseClick(course)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: position.x + 20,\n              y: position.y + 32,\n              className: \"text-lg font-bold fill-gray-900\",\n              children: course.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n              x: position.x + 20,\n              y: position.y + 45,\n              width: semesterWidth - 80,\n              height: courseHeight - 80,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-700 leading-tight font-medium\",\n                children: course.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: position.x + 20,\n              y: position.y + courseHeight - 15,\n              className: \"text-sm font-medium fill-gray-500\",\n              children: [course.units, \" units\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: position.x + semesterWidth - 90,\n              y: position.y + 15,\n              width: \"70\",\n              height: \"24\",\n              rx: \"12\",\n              fill: course.category === 'Core' ? '#10b981' : course.category === 'Technical' ? '#3b82f6' : course.category === 'Elective' ? '#8b5cf6' : course.category === 'Complementary' ? '#f59e0b' : '#ef4444',\n              className: \"shadow-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: position.x + semesterWidth - 55,\n              y: position.y + 31,\n              textAnchor: \"middle\",\n              className: \"text-xs font-bold fill-white\",\n              children: course.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 19\n            }, this)]\n          }, course.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this);\n        })\n      }, semester.semester, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)), hoveredCourse && /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"20\",\n          y: \"20\",\n          width: \"300\",\n          height: \"120\",\n          rx: \"12\",\n          fill: \"rgba(255, 255, 255, 0.95)\",\n          stroke: \"#000000\",\n          strokeWidth: \"2\",\n          className: \"shadow-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"40\",\n          y: \"45\",\n          className: \"text-sm font-bold fill-gray-900\",\n          children: \"Course Relationships\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"40\",\n          y: \"55\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"#fef3c7\",\n          stroke: \"#d97706\",\n          strokeWidth: \"2\",\n          rx: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"65\",\n          y: \"67\",\n          className: \"text-xs fill-gray-700\",\n          children: \"Prerequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"40\",\n          y: \"75\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"#dbeafe\",\n          stroke: \"#2563eb\",\n          strokeWidth: \"2\",\n          rx: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"65\",\n          y: \"87\",\n          className: \"text-xs fill-gray-700\",\n          children: \"Corequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"40\",\n          y: \"95\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"#fce7f3\",\n          stroke: \"#be185d\",\n          strokeWidth: \"2\",\n          rx: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"65\",\n          y: \"107\",\n          className: \"text-xs fill-gray-700\",\n          children: \"Following Courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(Flowchart, \"/L8V4LjgHCgRAlFnRDflG6Rz/zk=\");\n_c = Flowchart;\nexport default Flowchart;\nvar _c;\n$RefreshReg$(_c, \"Flowchart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","getPrerequisites","getCorequisites","courses","jsxDEV","_jsxDEV","Flowchart","selectedCourse","onCourseClick","_s","svgRef","hoveredCourse","setHoveredCourse","connections","setConnections","svgDimensions","setSvgDimensions","width","height","updateDimensions","current","container","parentElement","clientWidth","clientHeight","window","addEventListener","removeEventListener","newConnections","prerequisites","id","forEach","prereq","push","from","to","type","corequisites","coreq","getCoursesByYearAndSemester","organized","course","semesterKey","year","semester","sortedKeys","Object","keys","sort","a","b","yearA","parseInt","split","yearB","includes","map","key","semesterData","totalSemesters","length","semesterWidth","Math","max","courseHeight","courseSpacing","semesterSpacing","topMargin","leftMargin","svgWidth","svgHeight","getCoursePosition","semesterIndex","courseIndex","totalCourses","x","totalHeight","startY","y","getSemesterTitlePosition","isCourseHighlighted","some","conn","getConnectionPath","fromCourse","toCourse","fromIndex","toIndex","fromPos","toPos","fromX","fromY","toX","toY","controlPoint1X","controlPoint1Y","controlPoint2X","controlPoint2Y","getCourseHighlightColor","isPrerequisite","isCorequisite","hasHoveredAsPrerequisite","getCourseBorderColor","className","children","ref","markerWidth","markerHeight","refX","refY","orient","points","fill","fileName","_jsxFileName","lineNumber","columnNumber","patternUnits","d","stroke","strokeWidth","opacity","titlePos","rx","textAnchor","connection","index","find","c","fromSemesterIndex","findIndex","s","toSemesterIndex","path","strokeDasharray","markerEnd","position","isHighlighted","isHovered","highlightColor","borderColor","onMouseEnter","onMouseLeave","onClick","code","name","units","category","_c","$RefreshReg$"],"sources":["C:/flowchart/src/components/Flowchart.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Course, getPrerequisites, getCorequisites, courses } from '../data/courses.ts';\n\ninterface FlowchartProps {\n  selectedCourse: Course | null;\n  onCourseClick: (course: Course) => void;\n}\n\ninterface Connection {\n  from: string;\n  to: string;\n  type: 'prerequisite' | 'corequisite';\n}\n\nconst Flowchart: React.FC<FlowchartProps> = ({ selectedCourse, onCourseClick }) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [hoveredCourse, setHoveredCourse] = useState<Course | null>(null);\n  const [connections, setConnections] = useState<Connection[]>([]);\n  const [svgDimensions, setSvgDimensions] = useState({ width: 0, height: 0 });\n\n  // Update SVG dimensions on mount and resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (svgRef.current) {\n        const container = svgRef.current.parentElement;\n        if (container) {\n          setSvgDimensions({\n            width: container.clientWidth,\n            height: container.clientHeight\n          });\n        }\n      }\n    };\n\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Generate connections for the hovered course\n  useEffect(() => {\n    if (!hoveredCourse) {\n      setConnections([]);\n      return;\n    }\n\n    const newConnections: Connection[] = [];\n    \n    // Get prerequisites\n    const prerequisites = getPrerequisites(hoveredCourse.id);\n    prerequisites.forEach(prereq => {\n      newConnections.push({\n        from: prereq.id,\n        to: hoveredCourse.id,\n        type: 'prerequisite'\n      });\n    });\n\n    // Get corequisites\n    const corequisites = getCorequisites(hoveredCourse.id);\n    corequisites.forEach(coreq => {\n      newConnections.push({\n        from: coreq.id,\n        to: hoveredCourse.id,\n        type: 'corequisite'\n      });\n    });\n\n    setConnections(newConnections);\n  }, [hoveredCourse]);\n\n  // Get courses organized by year and semester\n  const getCoursesByYearAndSemester = () => {\n    const organized: { [key: string]: Course[] } = {};\n    \n    courses.forEach(course => {\n      const semesterKey = `Year ${course.year} ${course.semester}`;\n      if (!organized[semesterKey]) {\n        organized[semesterKey] = [];\n      }\n      organized[semesterKey].push(course);\n    });\n\n    // Sort semesters in chronological order\n    const sortedKeys = Object.keys(organized).sort((a, b) => {\n      const yearA = parseInt(a.split(' ')[1]);\n      const yearB = parseInt(b.split(' ')[1]);\n      if (yearA !== yearB) return yearA - yearB;\n      return a.includes('Fall') ? -1 : 1;\n    });\n\n    return sortedKeys.map(key => ({ semester: key, courses: organized[key] }));\n  };\n\n  const semesterData = getCoursesByYearAndSemester();\n  const totalSemesters = semesterData.length;\n  \n  // Dynamic sizing based on viewport\n  const semesterWidth = Math.max(300, svgDimensions.width / totalSemesters - 40);\n  const courseHeight = 140;\n  const courseSpacing = 24;\n  const semesterSpacing = 60;\n  const topMargin = 80;\n  const leftMargin = 40;\n\n  const svgWidth = Math.max(svgDimensions.width, totalSemesters * (semesterWidth + semesterSpacing) + leftMargin * 2);\n  const svgHeight = Math.max(svgDimensions.height, 800);\n\n  const getCoursePosition = (semesterIndex: number, courseIndex: number, totalCourses: number) => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + leftMargin;\n    const totalHeight = totalCourses * (courseHeight + courseSpacing) - courseSpacing;\n    const startY = topMargin + 60; // Extra space for semester title\n    const y = startY + courseIndex * (courseHeight + courseSpacing);\n    return { x, y };\n  };\n\n  const getSemesterTitlePosition = (semesterIndex: number) => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + leftMargin + semesterWidth / 2;\n    return { x, y: topMargin };\n  };\n\n  const isCourseHighlighted = (course: Course) => {\n    if (!hoveredCourse) return false;\n    return connections.some(conn => \n      (conn.from === course.id && conn.to === hoveredCourse.id) ||\n      (conn.to === course.id && conn.from === hoveredCourse.id)\n    );\n  };\n\n  const getConnectionPath = (fromCourse: Course, toCourse: Course, fromIndex: number, toIndex: number) => {\n    const fromPos = getCoursePosition(fromIndex, fromCourse.year - 1, 1);\n    const toPos = getCoursePosition(toIndex, toCourse.year - 1, 1);\n    \n    // Adjust arrow start and end to avoid overlapping with course cards\n    const fromX = fromPos.x + semesterWidth - 20;\n    const fromY = fromPos.y + courseHeight / 2;\n    const toX = toPos.x + 20;\n    const toY = toPos.y + courseHeight / 2;\n    \n    // Create a curved path\n    const controlPoint1X = fromX + (toX - fromX) * 0.3;\n    const controlPoint1Y = fromY;\n    const controlPoint2X = fromX + (toX - fromX) * 0.7;\n    const controlPoint2Y = toY;\n    \n    return `M ${fromX} ${fromY} C ${controlPoint1X} ${controlPoint1Y}, ${controlPoint2X} ${controlPoint2Y}, ${toX} ${toY}`;\n  };\n\n  const getCourseHighlightColor = (course: Course) => {\n    if (!hoveredCourse) return null;\n    \n    // Check if this course is a prerequisite of the hovered course\n    const isPrerequisite = connections.some(conn => \n      conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'prerequisite'\n    );\n    \n    // Check if this course is a corequisite of the hovered course\n    const isCorequisite = connections.some(conn => \n      conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'corequisite'\n    );\n    \n    // Check if this course has the hovered course as a prerequisite\n    const hasHoveredAsPrerequisite = getPrerequisites(course.id).some(prereq => prereq.id === hoveredCourse.id);\n    \n    if (isPrerequisite) return '#fef3c7'; // Yellow for prerequisites\n    if (isCorequisite) return '#dbeafe'; // Blue for corequisites\n    if (hasHoveredAsPrerequisite) return '#fce7f3'; // Pink for following courses\n    if (course.id === hoveredCourse.id) return '#fef3c7'; // Yellow for hovered course\n    \n    return null;\n  };\n\n  const getCourseBorderColor = (course: Course) => {\n    if (!hoveredCourse) return '#000000';\n    \n    const isPrerequisite = connections.some(conn => \n      conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'prerequisite'\n    );\n    \n    const isCorequisite = connections.some(conn => \n      conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'corequisite'\n    );\n    \n    const hasHoveredAsPrerequisite = getPrerequisites(course.id).some(prereq => prereq.id === hoveredCourse.id);\n    \n    if (isPrerequisite) return '#d97706'; // Orange border for prerequisites\n    if (isCorequisite) return '#2563eb'; // Blue border for corequisites\n    if (hasHoveredAsPrerequisite) return '#be185d'; // Pink border for following courses\n    if (course.id === hoveredCourse.id) return '#d97706'; // Orange border for hovered course\n    \n    return '#000000';\n  };\n\n  return (\n    <div className=\"w-full h-full overflow-auto bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n      <svg\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n        className=\"w-full h-full\"\n      >\n        {/* Arrow markers for connections */}\n        <defs>\n          <marker\n            id=\"arrowhead-prerequisite\"\n            markerWidth=\"12\"\n            markerHeight=\"8\"\n            refX=\"10\"\n            refY=\"4\"\n            orient=\"auto\"\n          >\n            <polygon points=\"0 0, 12 4, 0 8\" fill=\"#d97706\" />\n          </marker>\n          <marker\n            id=\"arrowhead-corequisite\"\n            markerWidth=\"12\"\n            markerHeight=\"8\"\n            refX=\"10\"\n            refY=\"4\"\n            orient=\"auto\"\n          >\n            <polygon points=\"0 0, 12 4, 0 8\" fill=\"#2563eb\" />\n          </marker>\n          <marker\n            id=\"arrowhead-following\"\n            markerWidth=\"12\"\n            markerHeight=\"8\"\n            refX=\"10\"\n            refY=\"4\"\n            orient=\"auto\"\n          >\n            <polygon points=\"0 0, 12 4, 0 8\" fill=\"#be185d\" />\n          </marker>\n        </defs>\n\n        {/* Background grid */}\n        <defs>\n          <pattern id=\"grid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n            <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" stroke=\"#e2e8f0\" strokeWidth=\"1\" opacity=\"0.3\"/>\n          </pattern>\n        </defs>\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n\n        {/* Semester titles */}\n        {semesterData.map((semester, semesterIndex) => {\n          const titlePos = getSemesterTitlePosition(semesterIndex);\n          return (\n            <g key={semester.semester}>\n              {/* Semester background */}\n              <rect\n                x={titlePos.x - 100}\n                y={titlePos.y - 30}\n                width=\"200\"\n                height=\"40\"\n                rx=\"20\"\n                fill=\"rgba(255, 255, 255, 0.9)\"\n                stroke=\"#000000\"\n                strokeWidth=\"2\"\n                className=\"shadow-lg\"\n              />\n              <text\n                x={titlePos.x}\n                y={titlePos.y - 5}\n                textAnchor=\"middle\"\n                className=\"text-lg font-bold fill-gray-900\"\n              >\n                {semester.semester}\n              </text>\n            </g>\n          );\n        })}\n\n        {/* Connection arrows - only shown on hover */}\n        {connections.map((connection, index) => {\n          const fromCourse = courses.find(c => c.id === connection.from);\n          const toCourse = courses.find(c => c.id === connection.to);\n          \n          if (!fromCourse || !toCourse) return null;\n          \n          const fromSemesterIndex = semesterData.findIndex(s => \n            s.courses.some(c => c.id === fromCourse.id)\n          );\n          const toSemesterIndex = semesterData.findIndex(s => \n            s.courses.some(c => c.id === toCourse.id)\n          );\n          \n          if (fromSemesterIndex === -1 || toSemesterIndex === -1) return null;\n          \n          const path = getConnectionPath(fromCourse, toCourse, fromSemesterIndex, toSemesterIndex);\n          const isPrerequisite = connection.type === 'prerequisite';\n          \n          return (\n            <g key={`connection-${index}`}>\n              <path\n                d={path}\n                stroke={isPrerequisite ? \"#d97706\" : \"#2563eb\"}\n                strokeWidth=\"4\"\n                strokeDasharray={isPrerequisite ? \"none\" : \"12,6\"}\n                fill=\"none\"\n                markerEnd={`url(#arrowhead-${connection.type})`}\n                opacity=\"0.8\"\n                className=\"transition-all duration-300\"\n              />\n            </g>\n          );\n        })}\n\n        {/* Course cards */}\n        {semesterData.map((semester, semesterIndex) => (\n          <g key={semester.semester}>\n            {semester.courses.map((course, courseIndex) => {\n              const position = getCoursePosition(semesterIndex, courseIndex, semester.courses.length);\n              const isHighlighted = isCourseHighlighted(course);\n              const isHovered = hoveredCourse?.id === course.id;\n              const highlightColor = getCourseHighlightColor(course);\n              const borderColor = getCourseBorderColor(course);\n              \n              return (\n                <g key={course.id}>\n                  {/* Course card background */}\n                  <rect\n                    x={position.x}\n                    y={position.y}\n                    width={semesterWidth - 40}\n                    height={courseHeight}\n                    rx=\"16\"\n                    fill={highlightColor || \"#ffffff\"}\n                    stroke={borderColor}\n                    strokeWidth=\"3\"\n                    className=\"cursor-pointer transition-all duration-300 shadow-lg hover:shadow-xl\"\n                    onMouseEnter={() => setHoveredCourse(course)}\n                    onMouseLeave={() => setHoveredCourse(null)}\n                    onClick={() => onCourseClick(course)}\n                  />\n                  \n                  {/* Course code */}\n                  <text\n                    x={position.x + 20}\n                    y={position.y + 32}\n                    className=\"text-lg font-bold fill-gray-900\"\n                  >\n                    {course.code}\n                  </text>\n                  \n                  {/* Course name - with text wrapping */}\n                  <foreignObject\n                    x={position.x + 20}\n                    y={position.y + 45}\n                    width={semesterWidth - 80}\n                    height={courseHeight - 80}\n                  >\n                    <div className=\"text-sm text-gray-700 leading-tight font-medium\">\n                      {course.name}\n                    </div>\n                  </foreignObject>\n                  \n                  {/* Units */}\n                  <text\n                    x={position.x + 20}\n                    y={position.y + courseHeight - 15}\n                    className=\"text-sm font-medium fill-gray-500\"\n                  >\n                    {course.units} units\n                  </text>\n                  \n                  {/* Category badge */}\n                  <rect\n                    x={position.x + semesterWidth - 90}\n                    y={position.y + 15}\n                    width=\"70\"\n                    height=\"24\"\n                    rx=\"12\"\n                    fill={course.category === 'Core' ? '#10b981' : \n                          course.category === 'Technical' ? '#3b82f6' : \n                          course.category === 'Elective' ? '#8b5cf6' : \n                          course.category === 'Complementary' ? '#f59e0b' : '#ef4444'}\n                    className=\"shadow-sm\"\n                  />\n                  <text\n                    x={position.x + semesterWidth - 55}\n                    y={position.y + 31}\n                    textAnchor=\"middle\"\n                    className=\"text-xs font-bold fill-white\"\n                  >\n                    {course.category}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n        ))}\n\n        {/* Legend */}\n        {hoveredCourse && (\n          <g>\n            <rect\n              x=\"20\"\n              y=\"20\"\n              width=\"300\"\n              height=\"120\"\n              rx=\"12\"\n              fill=\"rgba(255, 255, 255, 0.95)\"\n              stroke=\"#000000\"\n              strokeWidth=\"2\"\n              className=\"shadow-lg\"\n            />\n            <text x=\"40\" y=\"45\" className=\"text-sm font-bold fill-gray-900\">\n              Course Relationships\n            </text>\n            <rect x=\"40\" y=\"55\" width=\"16\" height=\"16\" fill=\"#fef3c7\" stroke=\"#d97706\" strokeWidth=\"2\" rx=\"2\"/>\n            <text x=\"65\" y=\"67\" className=\"text-xs fill-gray-700\">Prerequisites</text>\n            <rect x=\"40\" y=\"75\" width=\"16\" height=\"16\" fill=\"#dbeafe\" stroke=\"#2563eb\" strokeWidth=\"2\" rx=\"2\"/>\n            <text x=\"65\" y=\"87\" className=\"text-xs fill-gray-700\">Corequisites</text>\n            <rect x=\"40\" y=\"95\" width=\"16\" height=\"16\" fill=\"#fce7f3\" stroke=\"#be185d\" strokeWidth=\"2\" rx=\"2\"/>\n            <text x=\"65\" y=\"107\" className=\"text-xs fill-gray-700\">Following Courses</text>\n          </g>\n        )}\n      </svg>\n    </div>\n  );\n};\n\nexport default Flowchart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}