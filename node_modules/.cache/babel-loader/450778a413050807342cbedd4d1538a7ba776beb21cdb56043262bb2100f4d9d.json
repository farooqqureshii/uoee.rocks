{"ast":null,"code":"var _jsxFileName = \"C:\\\\flowchart\\\\src\\\\components\\\\Flowchart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { getPrerequisites, getCorequisites, courses } from '../data/courses.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flowchart = ({\n  selectedCourse,\n  onCourseClick\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [hoveredCourse, setHoveredCourse] = useState(null);\n  const [connections, setConnections] = useState([]);\n  const [svgDimensions, setSvgDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [zoom, setZoom] = useState(0.8);\n  const [pan, setPan] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Update SVG dimensions on mount and resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        setSvgDimensions({\n          width: containerRef.current.clientWidth,\n          height: containerRef.current.clientHeight\n        });\n      }\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Handle zoom with mouse wheel\n  useEffect(() => {\n    const handleWheel = e => {\n      e.preventDefault();\n      const delta = e.deltaY > 0 ? 0.9 : 1.1;\n      setZoom(prev => Math.max(0.3, Math.min(2, prev * delta)));\n    };\n    const container = containerRef.current;\n    if (container) {\n      container.addEventListener('wheel', handleWheel, {\n        passive: false\n      });\n      return () => container.removeEventListener('wheel', handleWheel);\n    }\n  }, []);\n\n  // Handle pan with mouse drag\n  useEffect(() => {\n    const handleMouseDown = e => {\n      setIsDragging(true);\n      setDragStart({\n        x: e.clientX - pan.x,\n        y: e.clientY - pan.y\n      });\n    };\n    const handleMouseMove = e => {\n      if (isDragging) {\n        setPan({\n          x: e.clientX - dragStart.x,\n          y: e.clientY - dragStart.y\n        });\n      }\n    };\n    const handleMouseUp = () => {\n      setIsDragging(false);\n    };\n    const container = containerRef.current;\n    if (container) {\n      container.addEventListener('mousedown', handleMouseDown);\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        container.removeEventListener('mousedown', handleMouseDown);\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, pan, dragStart]);\n\n  // Generate connections for the hovered course\n  useEffect(() => {\n    if (!hoveredCourse) {\n      setConnections([]);\n      return;\n    }\n    const newConnections = [];\n\n    // Get prerequisites\n    const prerequisites = getPrerequisites(hoveredCourse.id);\n    prerequisites.forEach(prereq => {\n      newConnections.push({\n        from: prereq.id,\n        to: hoveredCourse.id,\n        type: 'prerequisite'\n      });\n    });\n\n    // Get corequisites\n    const corequisites = getCorequisites(hoveredCourse.id);\n    corequisites.forEach(coreq => {\n      newConnections.push({\n        from: coreq.id,\n        to: hoveredCourse.id,\n        type: 'corequisite'\n      });\n    });\n    setConnections(newConnections);\n  }, [hoveredCourse]);\n\n  // Get courses organized by year and semester\n  const getCoursesByYearAndSemester = () => {\n    const organized = {};\n    courses.forEach(course => {\n      const semesterKey = `Year ${course.year} ${course.semester}`;\n      if (!organized[semesterKey]) {\n        organized[semesterKey] = [];\n      }\n      organized[semesterKey].push(course);\n    });\n\n    // Sort semesters in chronological order\n    const sortedKeys = Object.keys(organized).sort((a, b) => {\n      const yearA = parseInt(a.split(' ')[1]);\n      const yearB = parseInt(b.split(' ')[1]);\n      if (yearA !== yearB) return yearA - yearB;\n      return a.includes('Fall') ? -1 : 1;\n    });\n    return sortedKeys.map(key => ({\n      semester: key,\n      courses: organized[key]\n    }));\n  };\n  const semesterData = getCoursesByYearAndSemester();\n  const totalSemesters = semesterData.length;\n\n  // Optimized sizing for better visibility\n  const semesterWidth = 280;\n  const courseHeight = 100;\n  const courseSpacing = 16;\n  const semesterSpacing = 60;\n  const topMargin = 120;\n  const leftMargin = 80;\n\n  // Calculate total height needed\n  const maxCoursesInSemester = Math.max(...semesterData.map(s => s.courses.length));\n  const totalHeight = topMargin + maxCoursesInSemester * (courseHeight + courseSpacing) + 100;\n  const svgWidth = totalSemesters * (semesterWidth + semesterSpacing) + leftMargin * 2;\n  const svgHeight = Math.max(totalHeight, svgDimensions.height);\n  const getCoursePosition = (semesterIndex, courseIndex, totalCourses) => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + leftMargin;\n    const totalHeight = totalCourses * (courseHeight + courseSpacing) - courseSpacing;\n    const startY = topMargin + 60; // Extra space for semester title\n    const y = startY + courseIndex * (courseHeight + courseSpacing);\n    return {\n      x,\n      y\n    };\n  };\n  const getSemesterTitlePosition = semesterIndex => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + leftMargin + semesterWidth / 2;\n    return {\n      x,\n      y: topMargin\n    };\n  };\n  const getCourseHighlightColor = course => {\n    if (!hoveredCourse) return null;\n\n    // Check if this course is a prerequisite of the hovered course\n    const isPrerequisite = connections.some(conn => conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'prerequisite');\n\n    // Check if this course is a corequisite of the hovered course\n    const isCorequisite = connections.some(conn => conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'corequisite');\n\n    // Check if this course has the hovered course as a prerequisite\n    const hasHoveredAsPrerequisite = getPrerequisites(course.id).some(prereq => prereq.id === hoveredCourse.id);\n    if (isPrerequisite) return '#fef3c7'; // Yellow for prerequisites\n    if (isCorequisite) return '#dbeafe'; // Blue for corequisites\n    if (hasHoveredAsPrerequisite) return '#fce7f3'; // Pink for following courses\n    if (course.id === hoveredCourse.id) return '#fef3c7'; // Yellow for hovered course\n\n    return null;\n  };\n  const getCourseBorderColor = course => {\n    if (!hoveredCourse) return '#000000';\n    const isPrerequisite = connections.some(conn => conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'prerequisite');\n    const isCorequisite = connections.some(conn => conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'corequisite');\n    const hasHoveredAsPrerequisite = getPrerequisites(course.id).some(prereq => prereq.id === hoveredCourse.id);\n    if (isPrerequisite) return '#d97706'; // Orange border for prerequisites\n    if (isCorequisite) return '#2563eb'; // Blue border for corequisites\n    if (hasHoveredAsPrerequisite) return '#be185d'; // Pink border for following courses\n    if (course.id === hoveredCourse.id) return '#d97706'; // Orange border for hovered course\n\n    return '#000000';\n  };\n  const getConnectionPath = (fromCourse, toCourse, fromIndex, toIndex) => {\n    const fromPos = getCoursePosition(fromIndex, fromCourse.year - 1, 1);\n    const toPos = getCoursePosition(toIndex, toCourse.year - 1, 1);\n\n    // Adjust arrow start and end to avoid overlapping with course cards\n    const fromX = fromPos.x + semesterWidth - 20;\n    const fromY = fromPos.y + courseHeight / 2;\n    const toX = toPos.x + 20;\n    const toY = toPos.y + courseHeight / 2;\n\n    // Create a curved path\n    const controlPoint1X = fromX + (toX - fromX) * 0.3;\n    const controlPoint1Y = fromY;\n    const controlPoint2X = fromX + (toX - fromX) * 0.7;\n    const controlPoint2Y = toY;\n    return `M ${fromX} ${fromY} C ${controlPoint1X} ${controlPoint1Y}, ${controlPoint2X} ${controlPoint2Y}, ${toX} ${toY}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"w-full h-full overflow-hidden bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 cursor-grab active:cursor-grabbing\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: svgWidth,\n      height: svgHeight,\n      className: \"w-full h-full\",\n      style: {\n        transform: `translate(${pan.x}px, ${pan.y}px) scale(${zoom})`,\n        transformOrigin: '0 0',\n        transition: isDragging ? 'none' : 'transform 0.1s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: [/*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead-prerequisite\",\n          markerWidth: \"12\",\n          markerHeight: \"8\",\n          refX: \"10\",\n          refY: \"4\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 12 4, 0 8\",\n            fill: \"#d97706\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead-corequisite\",\n          markerWidth: \"12\",\n          markerHeight: \"8\",\n          refX: \"10\",\n          refY: \"4\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 12 4, 0 8\",\n            fill: \"#2563eb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead-following\",\n          markerWidth: \"12\",\n          markerHeight: \"8\",\n          refX: \"10\",\n          refY: \"4\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 12 4, 0 8\",\n            fill: \"#be185d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n          id: \"grid\",\n          width: \"40\",\n          height: \"40\",\n          patternUnits: \"userSpaceOnUse\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M 40 0 L 0 0 0 40\",\n            fill: \"none\",\n            stroke: \"#e2e8f0\",\n            strokeWidth: \"1\",\n            opacity: \"0.3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        width: \"100%\",\n        height: \"100%\",\n        fill: \"url(#grid)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), semesterData.map((semester, semesterIndex) => {\n        const titlePos = getSemesterTitlePosition(semesterIndex);\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: titlePos.x - 110,\n            y: titlePos.y - 25,\n            width: \"220\",\n            height: \"40\",\n            rx: \"20\",\n            fill: \"rgba(255, 255, 255, 0.95)\",\n            stroke: \"#000000\",\n            strokeWidth: \"2\",\n            className: \"shadow-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: titlePos.x,\n            y: titlePos.y - 5,\n            textAnchor: \"middle\",\n            className: \"text-base font-bold fill-gray-900\",\n            children: semester.semester\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, semester.semester, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this);\n      }), connections.map((connection, index) => {\n        const fromCourse = courses.find(c => c.id === connection.from);\n        const toCourse = courses.find(c => c.id === connection.to);\n        if (!fromCourse || !toCourse) return null;\n        const fromSemesterIndex = semesterData.findIndex(s => s.courses.some(c => c.id === fromCourse.id));\n        const toSemesterIndex = semesterData.findIndex(s => s.courses.some(c => c.id === toCourse.id));\n        if (fromSemesterIndex === -1 || toSemesterIndex === -1) return null;\n        const path = getConnectionPath(fromCourse, toCourse, fromSemesterIndex, toSemesterIndex);\n        const isPrerequisite = connection.type === 'prerequisite';\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: path,\n            stroke: isPrerequisite ? \"#d97706\" : \"#2563eb\",\n            strokeWidth: \"4\",\n            strokeDasharray: isPrerequisite ? \"none\" : \"12,6\",\n            fill: \"none\",\n            markerEnd: `url(#arrowhead-${connection.type})`,\n            opacity: \"0.8\",\n            className: \"transition-all duration-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)\n        }, `connection-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this);\n      }), semesterData.map((semester, semesterIndex) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: semester.courses.map((course, courseIndex) => {\n          const position = getCoursePosition(semesterIndex, courseIndex, semester.courses.length);\n          const highlightColor = getCourseHighlightColor(course);\n          const borderColor = getCourseBorderColor(course);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: position.x,\n              y: position.y,\n              width: semesterWidth - 40,\n              height: courseHeight,\n              rx: \"12\",\n              fill: highlightColor || \"#ffffff\",\n              stroke: borderColor,\n              strokeWidth: \"2\",\n              className: \"cursor-pointer transition-all duration-200 shadow-lg hover:shadow-xl\",\n              onMouseEnter: () => setHoveredCourse(course),\n              onMouseLeave: () => setHoveredCourse(null),\n              onClick: () => onCourseClick(course)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: position.x + 16,\n              y: position.y + 28,\n              className: \"text-base font-bold fill-gray-900\",\n              children: course.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n              x: position.x + 16,\n              y: position.y + 40,\n              width: semesterWidth - 72,\n              height: courseHeight - 60,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-700 leading-tight font-medium\",\n                children: course.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: position.x + 16,\n              y: position.y + courseHeight - 12,\n              className: \"text-xs font-medium fill-gray-500\",\n              children: [course.units, \" units\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 19\n            }, this)]\n          }, course.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this);\n        })\n      }, semester.semester, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this)), hoveredCourse && /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"20\",\n          y: \"20\",\n          width: \"280\",\n          height: \"100\",\n          rx: \"12\",\n          fill: \"rgba(255, 255, 255, 0.95)\",\n          stroke: \"#000000\",\n          strokeWidth: \"2\",\n          className: \"shadow-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"40\",\n          y: \"40\",\n          className: \"text-sm font-bold fill-gray-900\",\n          children: \"Course Relationships\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"40\",\n          y: \"50\",\n          width: \"14\",\n          height: \"14\",\n          fill: \"#fef3c7\",\n          stroke: \"#d97706\",\n          strokeWidth: \"2\",\n          rx: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"60\",\n          y: \"61\",\n          className: \"text-xs fill-gray-700\",\n          children: \"Prerequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"40\",\n          y: \"68\",\n          width: \"14\",\n          height: \"14\",\n          fill: \"#dbeafe\",\n          stroke: \"#2563eb\",\n          strokeWidth: \"2\",\n          rx: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"60\",\n          y: \"79\",\n          className: \"text-xs fill-gray-700\",\n          children: \"Corequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"40\",\n          y: \"86\",\n          width: \"14\",\n          height: \"14\",\n          fill: \"#fce7f3\",\n          stroke: \"#be185d\",\n          strokeWidth: \"2\",\n          rx: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"60\",\n          y: \"97\",\n          className: \"text-xs fill-gray-700\",\n          children: \"Following Courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: svgWidth - 120,\n          y: \"20\",\n          width: \"100\",\n          height: \"60\",\n          rx: \"8\",\n          fill: \"rgba(255, 255, 255, 0.9)\",\n          stroke: \"#000000\",\n          strokeWidth: \"2\",\n          className: \"shadow-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: svgWidth - 70,\n          y: \"40\",\n          textAnchor: \"middle\",\n          className: \"text-xs font-bold fill-gray-900\",\n          children: [\"Zoom: \", Math.round(zoom * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: svgWidth - 70,\n          y: \"55\",\n          textAnchor: \"middle\",\n          className: \"text-xs fill-gray-600\",\n          children: \"Scroll to zoom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: svgWidth - 70,\n          y: \"70\",\n          textAnchor: \"middle\",\n          className: \"text-xs fill-gray-600\",\n          children: \"Drag to pan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n_s(Flowchart, \"4wfikXWeCGy1EIniP99YSoMIK5o=\");\n_c = Flowchart;\nexport default Flowchart;\nvar _c;\n$RefreshReg$(_c, \"Flowchart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","getPrerequisites","getCorequisites","courses","jsxDEV","_jsxDEV","Flowchart","selectedCourse","onCourseClick","_s","svgRef","containerRef","hoveredCourse","setHoveredCourse","connections","setConnections","svgDimensions","setSvgDimensions","width","height","zoom","setZoom","pan","setPan","x","y","isDragging","setIsDragging","dragStart","setDragStart","updateDimensions","current","clientWidth","clientHeight","window","addEventListener","removeEventListener","handleWheel","e","preventDefault","delta","deltaY","prev","Math","max","min","container","passive","handleMouseDown","clientX","clientY","handleMouseMove","handleMouseUp","document","newConnections","prerequisites","id","forEach","prereq","push","from","to","type","corequisites","coreq","getCoursesByYearAndSemester","organized","course","semesterKey","year","semester","sortedKeys","Object","keys","sort","a","b","yearA","parseInt","split","yearB","includes","map","key","semesterData","totalSemesters","length","semesterWidth","courseHeight","courseSpacing","semesterSpacing","topMargin","leftMargin","maxCoursesInSemester","s","totalHeight","svgWidth","svgHeight","getCoursePosition","semesterIndex","courseIndex","totalCourses","startY","getSemesterTitlePosition","getCourseHighlightColor","isPrerequisite","some","conn","isCorequisite","hasHoveredAsPrerequisite","getCourseBorderColor","getConnectionPath","fromCourse","toCourse","fromIndex","toIndex","fromPos","toPos","fromX","fromY","toX","toY","controlPoint1X","controlPoint1Y","controlPoint2X","controlPoint2Y","ref","className","children","style","transform","transformOrigin","transition","markerWidth","markerHeight","refX","refY","orient","points","fill","fileName","_jsxFileName","lineNumber","columnNumber","patternUnits","d","stroke","strokeWidth","opacity","titlePos","rx","textAnchor","connection","index","find","c","fromSemesterIndex","findIndex","toSemesterIndex","path","strokeDasharray","markerEnd","position","highlightColor","borderColor","onMouseEnter","onMouseLeave","onClick","code","name","units","round","_c","$RefreshReg$"],"sources":["C:/flowchart/src/components/Flowchart.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Course, getPrerequisites, getCorequisites, courses } from '../data/courses.ts';\n\ninterface FlowchartProps {\n  selectedCourse: Course | null;\n  onCourseClick: (course: Course) => void;\n}\n\ninterface Connection {\n  from: string;\n  to: string;\n  type: 'prerequisite' | 'corequisite';\n}\n\nconst Flowchart: React.FC<FlowchartProps> = ({ selectedCourse, onCourseClick }) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [hoveredCourse, setHoveredCourse] = useState<Course | null>(null);\n  const [connections, setConnections] = useState<Connection[]>([]);\n  const [svgDimensions, setSvgDimensions] = useState({ width: 0, height: 0 });\n  const [zoom, setZoom] = useState(0.8);\n  const [pan, setPan] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n\n  // Update SVG dimensions on mount and resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        setSvgDimensions({\n          width: containerRef.current.clientWidth,\n          height: containerRef.current.clientHeight\n        });\n      }\n    };\n\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Handle zoom with mouse wheel\n  useEffect(() => {\n    const handleWheel = (e: WheelEvent) => {\n      e.preventDefault();\n      const delta = e.deltaY > 0 ? 0.9 : 1.1;\n      setZoom(prev => Math.max(0.3, Math.min(2, prev * delta)));\n    };\n\n    const container = containerRef.current;\n    if (container) {\n      container.addEventListener('wheel', handleWheel, { passive: false });\n      return () => container.removeEventListener('wheel', handleWheel);\n    }\n  }, []);\n\n  // Handle pan with mouse drag\n  useEffect(() => {\n    const handleMouseDown = (e: MouseEvent) => {\n      setIsDragging(true);\n      setDragStart({ x: e.clientX - pan.x, y: e.clientY - pan.y });\n    };\n\n    const handleMouseMove = (e: MouseEvent) => {\n      if (isDragging) {\n        setPan({\n          x: e.clientX - dragStart.x,\n          y: e.clientY - dragStart.y\n        });\n      }\n    };\n\n    const handleMouseUp = () => {\n      setIsDragging(false);\n    };\n\n    const container = containerRef.current;\n    if (container) {\n      container.addEventListener('mousedown', handleMouseDown);\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        container.removeEventListener('mousedown', handleMouseDown);\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, pan, dragStart]);\n\n  // Generate connections for the hovered course\n  useEffect(() => {\n    if (!hoveredCourse) {\n      setConnections([]);\n      return;\n    }\n\n    const newConnections: Connection[] = [];\n    \n    // Get prerequisites\n    const prerequisites = getPrerequisites(hoveredCourse.id);\n    prerequisites.forEach(prereq => {\n      newConnections.push({\n        from: prereq.id,\n        to: hoveredCourse.id,\n        type: 'prerequisite'\n      });\n    });\n\n    // Get corequisites\n    const corequisites = getCorequisites(hoveredCourse.id);\n    corequisites.forEach(coreq => {\n      newConnections.push({\n        from: coreq.id,\n        to: hoveredCourse.id,\n        type: 'corequisite'\n      });\n    });\n\n    setConnections(newConnections);\n  }, [hoveredCourse]);\n\n  // Get courses organized by year and semester\n  const getCoursesByYearAndSemester = () => {\n    const organized: { [key: string]: Course[] } = {};\n    \n    courses.forEach(course => {\n      const semesterKey = `Year ${course.year} ${course.semester}`;\n      if (!organized[semesterKey]) {\n        organized[semesterKey] = [];\n      }\n      organized[semesterKey].push(course);\n    });\n\n    // Sort semesters in chronological order\n    const sortedKeys = Object.keys(organized).sort((a, b) => {\n      const yearA = parseInt(a.split(' ')[1]);\n      const yearB = parseInt(b.split(' ')[1]);\n      if (yearA !== yearB) return yearA - yearB;\n      return a.includes('Fall') ? -1 : 1;\n    });\n\n    return sortedKeys.map(key => ({ semester: key, courses: organized[key] }));\n  };\n\n  const semesterData = getCoursesByYearAndSemester();\n  const totalSemesters = semesterData.length;\n  \n  // Optimized sizing for better visibility\n  const semesterWidth = 280;\n  const courseHeight = 100;\n  const courseSpacing = 16;\n  const semesterSpacing = 60;\n  const topMargin = 120;\n  const leftMargin = 80;\n\n  // Calculate total height needed\n  const maxCoursesInSemester = Math.max(...semesterData.map(s => s.courses.length));\n  const totalHeight = topMargin + maxCoursesInSemester * (courseHeight + courseSpacing) + 100;\n\n  const svgWidth = totalSemesters * (semesterWidth + semesterSpacing) + leftMargin * 2;\n  const svgHeight = Math.max(totalHeight, svgDimensions.height);\n\n  const getCoursePosition = (semesterIndex: number, courseIndex: number, totalCourses: number) => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + leftMargin;\n    const totalHeight = totalCourses * (courseHeight + courseSpacing) - courseSpacing;\n    const startY = topMargin + 60; // Extra space for semester title\n    const y = startY + courseIndex * (courseHeight + courseSpacing);\n    return { x, y };\n  };\n\n  const getSemesterTitlePosition = (semesterIndex: number) => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + leftMargin + semesterWidth / 2;\n    return { x, y: topMargin };\n  };\n\n  const getCourseHighlightColor = (course: Course) => {\n    if (!hoveredCourse) return null;\n    \n    // Check if this course is a prerequisite of the hovered course\n    const isPrerequisite = connections.some(conn => \n      conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'prerequisite'\n    );\n    \n    // Check if this course is a corequisite of the hovered course\n    const isCorequisite = connections.some(conn => \n      conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'corequisite'\n    );\n    \n    // Check if this course has the hovered course as a prerequisite\n    const hasHoveredAsPrerequisite = getPrerequisites(course.id).some(prereq => prereq.id === hoveredCourse.id);\n    \n    if (isPrerequisite) return '#fef3c7'; // Yellow for prerequisites\n    if (isCorequisite) return '#dbeafe'; // Blue for corequisites\n    if (hasHoveredAsPrerequisite) return '#fce7f3'; // Pink for following courses\n    if (course.id === hoveredCourse.id) return '#fef3c7'; // Yellow for hovered course\n    \n    return null;\n  };\n\n  const getCourseBorderColor = (course: Course) => {\n    if (!hoveredCourse) return '#000000';\n    \n    const isPrerequisite = connections.some(conn => \n      conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'prerequisite'\n    );\n    \n    const isCorequisite = connections.some(conn => \n      conn.from === course.id && conn.to === hoveredCourse.id && conn.type === 'corequisite'\n    );\n    \n    const hasHoveredAsPrerequisite = getPrerequisites(course.id).some(prereq => prereq.id === hoveredCourse.id);\n    \n    if (isPrerequisite) return '#d97706'; // Orange border for prerequisites\n    if (isCorequisite) return '#2563eb'; // Blue border for corequisites\n    if (hasHoveredAsPrerequisite) return '#be185d'; // Pink border for following courses\n    if (course.id === hoveredCourse.id) return '#d97706'; // Orange border for hovered course\n    \n    return '#000000';\n  };\n\n  const getConnectionPath = (fromCourse: Course, toCourse: Course, fromIndex: number, toIndex: number) => {\n    const fromPos = getCoursePosition(fromIndex, fromCourse.year - 1, 1);\n    const toPos = getCoursePosition(toIndex, toCourse.year - 1, 1);\n    \n    // Adjust arrow start and end to avoid overlapping with course cards\n    const fromX = fromPos.x + semesterWidth - 20;\n    const fromY = fromPos.y + courseHeight / 2;\n    const toX = toPos.x + 20;\n    const toY = toPos.y + courseHeight / 2;\n    \n    // Create a curved path\n    const controlPoint1X = fromX + (toX - fromX) * 0.3;\n    const controlPoint1Y = fromY;\n    const controlPoint2X = fromX + (toX - fromX) * 0.7;\n    const controlPoint2Y = toY;\n    \n    return `M ${fromX} ${fromY} C ${controlPoint1X} ${controlPoint1Y}, ${controlPoint2X} ${controlPoint2Y}, ${toX} ${toY}`;\n  };\n\n  return (\n    <div \n      ref={containerRef}\n      className=\"w-full h-full overflow-hidden bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 cursor-grab active:cursor-grabbing\"\n    >\n      <svg\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n        className=\"w-full h-full\"\n        style={{\n          transform: `translate(${pan.x}px, ${pan.y}px) scale(${zoom})`,\n          transformOrigin: '0 0',\n          transition: isDragging ? 'none' : 'transform 0.1s ease-out'\n        }}\n      >\n        {/* Arrow markers for connections */}\n        <defs>\n          <marker\n            id=\"arrowhead-prerequisite\"\n            markerWidth=\"12\"\n            markerHeight=\"8\"\n            refX=\"10\"\n            refY=\"4\"\n            orient=\"auto\"\n          >\n            <polygon points=\"0 0, 12 4, 0 8\" fill=\"#d97706\" />\n          </marker>\n          <marker\n            id=\"arrowhead-corequisite\"\n            markerWidth=\"12\"\n            markerHeight=\"8\"\n            refX=\"10\"\n            refY=\"4\"\n            orient=\"auto\"\n          >\n            <polygon points=\"0 0, 12 4, 0 8\" fill=\"#2563eb\" />\n          </marker>\n          <marker\n            id=\"arrowhead-following\"\n            markerWidth=\"12\"\n            markerHeight=\"8\"\n            refX=\"10\"\n            refY=\"4\"\n            orient=\"auto\"\n          >\n            <polygon points=\"0 0, 12 4, 0 8\" fill=\"#be185d\" />\n          </marker>\n        </defs>\n\n        {/* Background grid */}\n        <defs>\n          <pattern id=\"grid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n            <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" stroke=\"#e2e8f0\" strokeWidth=\"1\" opacity=\"0.3\"/>\n          </pattern>\n        </defs>\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n\n        {/* Semester titles */}\n        {semesterData.map((semester, semesterIndex) => {\n          const titlePos = getSemesterTitlePosition(semesterIndex);\n          return (\n            <g key={semester.semester}>\n              {/* Semester background */}\n              <rect\n                x={titlePos.x - 110}\n                y={titlePos.y - 25}\n                width=\"220\"\n                height=\"40\"\n                rx=\"20\"\n                fill=\"rgba(255, 255, 255, 0.95)\"\n                stroke=\"#000000\"\n                strokeWidth=\"2\"\n                className=\"shadow-lg\"\n              />\n              <text\n                x={titlePos.x}\n                y={titlePos.y - 5}\n                textAnchor=\"middle\"\n                className=\"text-base font-bold fill-gray-900\"\n              >\n                {semester.semester}\n              </text>\n            </g>\n          );\n        })}\n\n        {/* Connection arrows - only shown on hover */}\n        {connections.map((connection, index) => {\n          const fromCourse = courses.find(c => c.id === connection.from);\n          const toCourse = courses.find(c => c.id === connection.to);\n          \n          if (!fromCourse || !toCourse) return null;\n          \n          const fromSemesterIndex = semesterData.findIndex(s => \n            s.courses.some(c => c.id === fromCourse.id)\n          );\n          const toSemesterIndex = semesterData.findIndex(s => \n            s.courses.some(c => c.id === toCourse.id)\n          );\n          \n          if (fromSemesterIndex === -1 || toSemesterIndex === -1) return null;\n          \n          const path = getConnectionPath(fromCourse, toCourse, fromSemesterIndex, toSemesterIndex);\n          const isPrerequisite = connection.type === 'prerequisite';\n          \n          return (\n            <g key={`connection-${index}`}>\n              <path\n                d={path}\n                stroke={isPrerequisite ? \"#d97706\" : \"#2563eb\"}\n                strokeWidth=\"4\"\n                strokeDasharray={isPrerequisite ? \"none\" : \"12,6\"}\n                fill=\"none\"\n                markerEnd={`url(#arrowhead-${connection.type})`}\n                opacity=\"0.8\"\n                className=\"transition-all duration-300\"\n              />\n            </g>\n          );\n        })}\n\n        {/* Course cards */}\n        {semesterData.map((semester, semesterIndex) => (\n          <g key={semester.semester}>\n            {semester.courses.map((course, courseIndex) => {\n              const position = getCoursePosition(semesterIndex, courseIndex, semester.courses.length);\n              const highlightColor = getCourseHighlightColor(course);\n              const borderColor = getCourseBorderColor(course);\n              \n              return (\n                <g key={course.id}>\n                  {/* Course card background */}\n                  <rect\n                    x={position.x}\n                    y={position.y}\n                    width={semesterWidth - 40}\n                    height={courseHeight}\n                    rx=\"12\"\n                    fill={highlightColor || \"#ffffff\"}\n                    stroke={borderColor}\n                    strokeWidth=\"2\"\n                    className=\"cursor-pointer transition-all duration-200 shadow-lg hover:shadow-xl\"\n                    onMouseEnter={() => setHoveredCourse(course)}\n                    onMouseLeave={() => setHoveredCourse(null)}\n                    onClick={() => onCourseClick(course)}\n                  />\n                  \n                  {/* Course code */}\n                  <text\n                    x={position.x + 16}\n                    y={position.y + 28}\n                    className=\"text-base font-bold fill-gray-900\"\n                  >\n                    {course.code}\n                  </text>\n                  \n                  {/* Course name - with text wrapping */}\n                  <foreignObject\n                    x={position.x + 16}\n                    y={position.y + 40}\n                    width={semesterWidth - 72}\n                    height={courseHeight - 60}\n                  >\n                    <div className=\"text-sm text-gray-700 leading-tight font-medium\">\n                      {course.name}\n                    </div>\n                  </foreignObject>\n                  \n                  {/* Units */}\n                  <text\n                    x={position.x + 16}\n                    y={position.y + courseHeight - 12}\n                    className=\"text-xs font-medium fill-gray-500\"\n                  >\n                    {course.units} units\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n        ))}\n\n        {/* Legend */}\n        {hoveredCourse && (\n          <g>\n            <rect\n              x=\"20\"\n              y=\"20\"\n              width=\"280\"\n              height=\"100\"\n              rx=\"12\"\n              fill=\"rgba(255, 255, 255, 0.95)\"\n              stroke=\"#000000\"\n              strokeWidth=\"2\"\n              className=\"shadow-lg\"\n            />\n            <text x=\"40\" y=\"40\" className=\"text-sm font-bold fill-gray-900\">\n              Course Relationships\n            </text>\n            <rect x=\"40\" y=\"50\" width=\"14\" height=\"14\" fill=\"#fef3c7\" stroke=\"#d97706\" strokeWidth=\"2\" rx=\"2\"/>\n            <text x=\"60\" y=\"61\" className=\"text-xs fill-gray-700\">Prerequisites</text>\n            <rect x=\"40\" y=\"68\" width=\"14\" height=\"14\" fill=\"#dbeafe\" stroke=\"#2563eb\" strokeWidth=\"2\" rx=\"2\"/>\n            <text x=\"60\" y=\"79\" className=\"text-xs fill-gray-700\">Corequisites</text>\n            <rect x=\"40\" y=\"86\" width=\"14\" height=\"14\" fill=\"#fce7f3\" stroke=\"#be185d\" strokeWidth=\"2\" rx=\"2\"/>\n            <text x=\"60\" y=\"97\" className=\"text-xs fill-gray-700\">Following Courses</text>\n          </g>\n        )}\n\n        {/* Zoom controls */}\n        <g>\n          <rect\n            x={svgWidth - 120}\n            y=\"20\"\n            width=\"100\"\n            height=\"60\"\n            rx=\"8\"\n            fill=\"rgba(255, 255, 255, 0.9)\"\n            stroke=\"#000000\"\n            strokeWidth=\"2\"\n            className=\"shadow-lg\"\n          />\n          <text x={svgWidth - 70} y=\"40\" textAnchor=\"middle\" className=\"text-xs font-bold fill-gray-900\">\n            Zoom: {Math.round(zoom * 100)}%\n          </text>\n          <text x={svgWidth - 70} y=\"55\" textAnchor=\"middle\" className=\"text-xs fill-gray-600\">\n            Scroll to zoom\n          </text>\n          <text x={svgWidth - 70} y=\"70\" textAnchor=\"middle\" className=\"text-xs fill-gray-600\">\n            Drag to pan\n          </text>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default Flowchart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}