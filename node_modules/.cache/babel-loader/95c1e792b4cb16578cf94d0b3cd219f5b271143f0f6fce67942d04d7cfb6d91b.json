{"ast":null,"code":"var _jsxFileName = \"C:\\\\flowchart\\\\src\\\\components\\\\Flowchart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { getPrerequisites, getCorequisites } from '../data/courses.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flowchart = ({\n  selectedCourse,\n  onCourseClick\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [hoveredCourse, setHoveredCourse] = useState(null);\n  const [connections, setConnections] = useState([]);\n\n  // Generate connections for the hovered course\n  useEffect(() => {\n    if (!hoveredCourse) {\n      setConnections([]);\n      return;\n    }\n    const newConnections = [];\n\n    // Get prerequisites\n    const prerequisites = getPrerequisites(hoveredCourse);\n    prerequisites.forEach(prereq => {\n      newConnections.push({\n        from: prereq.id,\n        to: hoveredCourse.id,\n        type: 'prerequisite'\n      });\n    });\n\n    // Get corequisites\n    const corequisites = getCorequisites(hoveredCourse);\n    corequisites.forEach(coreq => {\n      newConnections.push({\n        from: coreq.id,\n        to: hoveredCourse.id,\n        type: 'corequisite'\n      });\n    });\n    setConnections(newConnections);\n  }, [hoveredCourse]);\n\n  // Get courses organized by year and semester\n  const getCoursesByYearAndSemester = () => {\n    const organized = {};\n    courses.forEach(course => {\n      const semesterKey = `Year ${course.year} ${course.semester}`;\n      if (!organized[semesterKey]) {\n        organized[semesterKey] = [];\n      }\n      organized[semesterKey].push(course);\n    });\n\n    // Sort semesters in chronological order\n    const sortedKeys = Object.keys(organized).sort((a, b) => {\n      const yearA = parseInt(a.split(' ')[1]);\n      const yearB = parseInt(b.split(' ')[1]);\n      if (yearA !== yearB) return yearA - yearB;\n      return a.includes('Fall') ? -1 : 1;\n    });\n    return sortedKeys.map(key => ({\n      semester: key,\n      courses: organized[key]\n    }));\n  };\n  const semesterData = getCoursesByYearAndSemester();\n  const totalSemesters = semesterData.length;\n  const semesterWidth = 280; // Increased width for more space\n  const courseHeight = 120; // Increased height for bigger courses\n  const courseSpacing = 20; // Increased spacing between courses\n  const semesterSpacing = 40; // Increased spacing between semesters\n\n  const svgWidth = totalSemesters * (semesterWidth + semesterSpacing) + 100;\n  const svgHeight = 800; // Increased height\n\n  const getCoursePosition = (semesterIndex, courseIndex, totalCourses) => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + 50;\n    const totalHeight = totalCourses * (courseHeight + courseSpacing) - courseSpacing;\n    const startY = 100;\n    const y = startY + courseIndex * (courseHeight + courseSpacing);\n    return {\n      x,\n      y\n    };\n  };\n  const getSemesterTitlePosition = semesterIndex => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + 50 + semesterWidth / 2;\n    return {\n      x,\n      y: 30\n    };\n  };\n  const isCourseHighlighted = course => {\n    if (!hoveredCourse) return false;\n    return connections.some(conn => conn.from === course.id && conn.to === hoveredCourse.id || conn.to === course.id && conn.from === hoveredCourse.id);\n  };\n  const getConnectionPath = (fromCourse, toCourse, fromIndex, toIndex) => {\n    const fromPos = getCoursePosition(fromIndex, fromCourse.year - 1, 1);\n    const toPos = getCoursePosition(toIndex, toCourse.year - 1, 1);\n\n    // Adjust arrow start and end to avoid overlapping with course cards\n    const fromX = fromPos.x + semesterWidth - 20;\n    const fromY = fromPos.y + courseHeight / 2;\n    const toX = toPos.x + 20;\n    const toY = toPos.y + courseHeight / 2;\n    return `M ${fromX} ${fromY} L ${toX} ${toY}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full overflow-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: svgWidth,\n      height: svgHeight,\n      className: \"w-full h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: [/*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead-prerequisite\",\n          markerWidth: \"10\",\n          markerHeight: \"7\",\n          refX: \"9\",\n          refY: \"3.5\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 10 3.5, 0 7\",\n            fill: \"#ef4444\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead-corequisite\",\n          markerWidth: \"10\",\n          markerHeight: \"7\",\n          refX: \"9\",\n          refY: \"3.5\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 10 3.5, 0 7\",\n            fill: \"#3b82f6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), semesterData.map((semester, semesterIndex) => {\n        const titlePos = getSemesterTitlePosition(semesterIndex);\n        return /*#__PURE__*/_jsxDEV(\"text\", {\n          x: titlePos.x,\n          y: titlePos.y,\n          textAnchor: \"middle\",\n          className: \"text-lg font-bold fill-gray-900\",\n          children: semester.semester\n        }, semester.semester, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this);\n      }), connections.map((connection, index) => {\n        const fromCourse = courses.find(c => c.id === connection.from);\n        const toCourse = courses.find(c => c.id === connection.to);\n        if (!fromCourse || !toCourse) return null;\n        const fromSemesterIndex = semesterData.findIndex(s => s.courses.some(c => c.id === fromCourse.id));\n        const toSemesterIndex = semesterData.findIndex(s => s.courses.some(c => c.id === toCourse.id));\n        if (fromSemesterIndex === -1 || toSemesterIndex === -1) return null;\n        const path = getConnectionPath(fromCourse, toCourse, fromSemesterIndex, toSemesterIndex);\n        const isPrerequisite = connection.type === 'prerequisite';\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: path,\n            stroke: isPrerequisite ? \"#ef4444\" : \"#3b82f6\",\n            strokeWidth: \"3\",\n            strokeDasharray: isPrerequisite ? \"none\" : \"10,5\",\n            fill: \"none\",\n            markerEnd: `url(#arrowhead-${connection.type})`,\n            opacity: \"0.8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, `connection-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this);\n      }), semesterData.map((semester, semesterIndex) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: semester.courses.map((course, courseIndex) => {\n          const position = getCoursePosition(semesterIndex, courseIndex, semester.courses.length);\n          const isHighlighted = isCourseHighlighted(course);\n          const isHovered = (hoveredCourse === null || hoveredCourse === void 0 ? void 0 : hoveredCourse.id) === course.id;\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: position.x,\n              y: position.y,\n              width: semesterWidth - 40,\n              height: courseHeight,\n              rx: \"12\",\n              fill: isHovered ? \"#fef3c7\" : \"#ffffff\",\n              stroke: isHighlighted ? \"#3b82f6\" : \"#000000\",\n              strokeWidth: isHighlighted ? \"3\" : \"2\",\n              className: \"cursor-pointer transition-all duration-200\",\n              onMouseEnter: () => setHoveredCourse(course),\n              onMouseLeave: () => setHoveredCourse(null),\n              onClick: () => onCourseClick(course)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: position.x + 16,\n              y: position.y + 28,\n              className: \"text-sm font-bold fill-gray-900\",\n              children: course.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n              x: position.x + 16,\n              y: position.y + 40,\n              width: semesterWidth - 72,\n              height: courseHeight - 60,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-700 leading-tight\",\n                children: course.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: position.x + 16,\n              y: position.y + courseHeight - 12,\n              className: \"text-xs font-medium fill-gray-500\",\n              children: [course.units, \" units\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: position.x + semesterWidth - 80,\n              y: position.y + 12,\n              width: \"60\",\n              height: \"20\",\n              rx: \"10\",\n              fill: course.category === 'Core' ? '#10b981' : course.category === 'Technical' ? '#3b82f6' : course.category === 'Elective' ? '#8b5cf6' : course.category === 'Lab' ? '#f59e0b' : '#ef4444'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: position.x + semesterWidth - 50,\n              y: position.y + 26,\n              textAnchor: \"middle\",\n              className: \"text-xs font-medium fill-white\",\n              children: course.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this)]\n          }, course.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this);\n        })\n      }, semester.semester, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(Flowchart, \"JsdfNKZQ8oyt2fBuok1DdGdjHug=\");\n_c = Flowchart;\nexport default Flowchart;\nvar _c;\n$RefreshReg$(_c, \"Flowchart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","getPrerequisites","getCorequisites","jsxDEV","_jsxDEV","Flowchart","selectedCourse","onCourseClick","_s","svgRef","hoveredCourse","setHoveredCourse","connections","setConnections","newConnections","prerequisites","forEach","prereq","push","from","id","to","type","corequisites","coreq","getCoursesByYearAndSemester","organized","courses","course","semesterKey","year","semester","sortedKeys","Object","keys","sort","a","b","yearA","parseInt","split","yearB","includes","map","key","semesterData","totalSemesters","length","semesterWidth","courseHeight","courseSpacing","semesterSpacing","svgWidth","svgHeight","getCoursePosition","semesterIndex","courseIndex","totalCourses","x","totalHeight","startY","y","getSemesterTitlePosition","isCourseHighlighted","some","conn","getConnectionPath","fromCourse","toCourse","fromIndex","toIndex","fromPos","toPos","fromX","fromY","toX","toY","className","children","ref","width","height","markerWidth","markerHeight","refX","refY","orient","points","fill","fileName","_jsxFileName","lineNumber","columnNumber","titlePos","textAnchor","connection","index","find","c","fromSemesterIndex","findIndex","s","toSemesterIndex","path","isPrerequisite","d","stroke","strokeWidth","strokeDasharray","markerEnd","opacity","position","isHighlighted","isHovered","rx","onMouseEnter","onMouseLeave","onClick","code","name","units","category","_c","$RefreshReg$"],"sources":["C:/flowchart/src/components/Flowchart.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Course, getPrerequisites, getCorequisites } from '../data/courses.ts';\n\ninterface FlowchartProps {\n  selectedCourse: Course | null;\n  onCourseClick: (course: Course) => void;\n}\n\ninterface Connection {\n  from: string;\n  to: string;\n  type: 'prerequisite' | 'corequisite';\n}\n\nconst Flowchart: React.FC<FlowchartProps> = ({ selectedCourse, onCourseClick }) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [hoveredCourse, setHoveredCourse] = useState<Course | null>(null);\n  const [connections, setConnections] = useState<Connection[]>([]);\n\n  // Generate connections for the hovered course\n  useEffect(() => {\n    if (!hoveredCourse) {\n      setConnections([]);\n      return;\n    }\n\n    const newConnections: Connection[] = [];\n    \n    // Get prerequisites\n    const prerequisites = getPrerequisites(hoveredCourse);\n    prerequisites.forEach(prereq => {\n      newConnections.push({\n        from: prereq.id,\n        to: hoveredCourse.id,\n        type: 'prerequisite'\n      });\n    });\n\n    // Get corequisites\n    const corequisites = getCorequisites(hoveredCourse);\n    corequisites.forEach(coreq => {\n      newConnections.push({\n        from: coreq.id,\n        to: hoveredCourse.id,\n        type: 'corequisite'\n      });\n    });\n\n    setConnections(newConnections);\n  }, [hoveredCourse]);\n\n  // Get courses organized by year and semester\n  const getCoursesByYearAndSemester = () => {\n    const organized: { [key: string]: Course[] } = {};\n    \n    courses.forEach(course => {\n      const semesterKey = `Year ${course.year} ${course.semester}`;\n      if (!organized[semesterKey]) {\n        organized[semesterKey] = [];\n      }\n      organized[semesterKey].push(course);\n    });\n\n    // Sort semesters in chronological order\n    const sortedKeys = Object.keys(organized).sort((a, b) => {\n      const yearA = parseInt(a.split(' ')[1]);\n      const yearB = parseInt(b.split(' ')[1]);\n      if (yearA !== yearB) return yearA - yearB;\n      return a.includes('Fall') ? -1 : 1;\n    });\n\n    return sortedKeys.map(key => ({ semester: key, courses: organized[key] }));\n  };\n\n  const semesterData = getCoursesByYearAndSemester();\n  const totalSemesters = semesterData.length;\n  const semesterWidth = 280; // Increased width for more space\n  const courseHeight = 120; // Increased height for bigger courses\n  const courseSpacing = 20; // Increased spacing between courses\n  const semesterSpacing = 40; // Increased spacing between semesters\n\n  const svgWidth = totalSemesters * (semesterWidth + semesterSpacing) + 100;\n  const svgHeight = 800; // Increased height\n\n  const getCoursePosition = (semesterIndex: number, courseIndex: number, totalCourses: number) => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + 50;\n    const totalHeight = totalCourses * (courseHeight + courseSpacing) - courseSpacing;\n    const startY = 100;\n    const y = startY + courseIndex * (courseHeight + courseSpacing);\n    return { x, y };\n  };\n\n  const getSemesterTitlePosition = (semesterIndex: number) => {\n    const x = semesterIndex * (semesterWidth + semesterSpacing) + 50 + semesterWidth / 2;\n    return { x, y: 30 };\n  };\n\n  const isCourseHighlighted = (course: Course) => {\n    if (!hoveredCourse) return false;\n    return connections.some(conn => \n      (conn.from === course.id && conn.to === hoveredCourse.id) ||\n      (conn.to === course.id && conn.from === hoveredCourse.id)\n    );\n  };\n\n  const getConnectionPath = (fromCourse: Course, toCourse: Course, fromIndex: number, toIndex: number) => {\n    const fromPos = getCoursePosition(fromIndex, fromCourse.year - 1, 1);\n    const toPos = getCoursePosition(toIndex, toCourse.year - 1, 1);\n    \n    // Adjust arrow start and end to avoid overlapping with course cards\n    const fromX = fromPos.x + semesterWidth - 20;\n    const fromY = fromPos.y + courseHeight / 2;\n    const toX = toPos.x + 20;\n    const toY = toPos.y + courseHeight / 2;\n    \n    return `M ${fromX} ${fromY} L ${toX} ${toY}`;\n  };\n\n  return (\n    <div className=\"w-full h-full overflow-auto\">\n      <svg\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n        className=\"w-full h-full\"\n      >\n        {/* Arrow markers */}\n        <defs>\n          <marker\n            id=\"arrowhead-prerequisite\"\n            markerWidth=\"10\"\n            markerHeight=\"7\"\n            refX=\"9\"\n            refY=\"3.5\"\n            orient=\"auto\"\n          >\n            <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#ef4444\" />\n          </marker>\n          <marker\n            id=\"arrowhead-corequisite\"\n            markerWidth=\"10\"\n            markerHeight=\"7\"\n            refX=\"9\"\n            refY=\"3.5\"\n            orient=\"auto\"\n          >\n            <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#3b82f6\" />\n          </marker>\n        </defs>\n\n        {/* Semester titles */}\n        {semesterData.map((semester, semesterIndex) => {\n          const titlePos = getSemesterTitlePosition(semesterIndex);\n          return (\n            <text\n              key={semester.semester}\n              x={titlePos.x}\n              y={titlePos.y}\n              textAnchor=\"middle\"\n              className=\"text-lg font-bold fill-gray-900\"\n            >\n              {semester.semester}\n            </text>\n          );\n        })}\n\n        {/* Connection arrows */}\n        {connections.map((connection, index) => {\n          const fromCourse = courses.find(c => c.id === connection.from);\n          const toCourse = courses.find(c => c.id === connection.to);\n          \n          if (!fromCourse || !toCourse) return null;\n          \n          const fromSemesterIndex = semesterData.findIndex(s => \n            s.courses.some(c => c.id === fromCourse.id)\n          );\n          const toSemesterIndex = semesterData.findIndex(s => \n            s.courses.some(c => c.id === toCourse.id)\n          );\n          \n          if (fromSemesterIndex === -1 || toSemesterIndex === -1) return null;\n          \n          const path = getConnectionPath(fromCourse, toCourse, fromSemesterIndex, toSemesterIndex);\n          const isPrerequisite = connection.type === 'prerequisite';\n          \n          return (\n            <g key={`connection-${index}`}>\n              <path\n                d={path}\n                stroke={isPrerequisite ? \"#ef4444\" : \"#3b82f6\"}\n                strokeWidth=\"3\"\n                strokeDasharray={isPrerequisite ? \"none\" : \"10,5\"}\n                fill=\"none\"\n                markerEnd={`url(#arrowhead-${connection.type})`}\n                opacity=\"0.8\"\n              />\n            </g>\n          );\n        })}\n\n        {/* Course cards */}\n        {semesterData.map((semester, semesterIndex) => (\n          <g key={semester.semester}>\n            {semester.courses.map((course, courseIndex) => {\n              const position = getCoursePosition(semesterIndex, courseIndex, semester.courses.length);\n              const isHighlighted = isCourseHighlighted(course);\n              const isHovered = hoveredCourse?.id === course.id;\n              \n              return (\n                <g key={course.id}>\n                  {/* Course card background */}\n                  <rect\n                    x={position.x}\n                    y={position.y}\n                    width={semesterWidth - 40}\n                    height={courseHeight}\n                    rx=\"12\"\n                    fill={isHovered ? \"#fef3c7\" : \"#ffffff\"}\n                    stroke={isHighlighted ? \"#3b82f6\" : \"#000000\"}\n                    strokeWidth={isHighlighted ? \"3\" : \"2\"}\n                    className=\"cursor-pointer transition-all duration-200\"\n                    onMouseEnter={() => setHoveredCourse(course)}\n                    onMouseLeave={() => setHoveredCourse(null)}\n                    onClick={() => onCourseClick(course)}\n                  />\n                  \n                  {/* Course code */}\n                  <text\n                    x={position.x + 16}\n                    y={position.y + 28}\n                    className=\"text-sm font-bold fill-gray-900\"\n                  >\n                    {course.code}\n                  </text>\n                  \n                  {/* Course name - with text wrapping to prevent cutoff */}\n                  <foreignObject\n                    x={position.x + 16}\n                    y={position.y + 40}\n                    width={semesterWidth - 72}\n                    height={courseHeight - 60}\n                  >\n                    <div className=\"text-xs text-gray-700 leading-tight\">\n                      {course.name}\n                    </div>\n                  </foreignObject>\n                  \n                  {/* Units */}\n                  <text\n                    x={position.x + 16}\n                    y={position.y + courseHeight - 12}\n                    className=\"text-xs font-medium fill-gray-500\"\n                  >\n                    {course.units} units\n                  </text>\n                  \n                  {/* Category badge */}\n                  <rect\n                    x={position.x + semesterWidth - 80}\n                    y={position.y + 12}\n                    width=\"60\"\n                    height=\"20\"\n                    rx=\"10\"\n                    fill={course.category === 'Core' ? '#10b981' : \n                          course.category === 'Technical' ? '#3b82f6' : \n                          course.category === 'Elective' ? '#8b5cf6' : \n                          course.category === 'Lab' ? '#f59e0b' : '#ef4444'}\n                  />\n                  <text\n                    x={position.x + semesterWidth - 50}\n                    y={position.y + 26}\n                    textAnchor=\"middle\"\n                    className=\"text-xs font-medium fill-white\"\n                  >\n                    {course.category}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n        ))}\n      </svg>\n    </div>\n  );\n};\n\nexport default Flowchart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}